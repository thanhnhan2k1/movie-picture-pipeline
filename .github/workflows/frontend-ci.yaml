name: Frontend Continuous Integration

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: 18.18.0
  IMAGE_REPO_NAME: frontend

jobs:
  lint:
    name: LINT JOB
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Perform a cache action to restore cache
        uses: actions/cache@v4
        id: cache-npm
        with:
          path: ~/.npm
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: |
          npm ci
          npm install eslint --save-dev

      - name: Running linter
        run: npm run lint

  test:
    name: TEST JOB
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Perform a cache action to restore cache
        uses: actions/cache@v3
        id: cache-npm
        with:
          path: ~/.npm
          key: npm-cache-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: |
          npm ci
          npm install prettier --save-dev

      - name: Running test
        run: npm run test
  build:
    name: BUILD JOB
    needs: [lint, test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker Build
        run: |
          docker build -t ${{env.IMAGE_REPO_NAME}}:latest .
